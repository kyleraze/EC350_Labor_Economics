---
title: "Robots and Taxes"
subtitle: "EC 350: Labor Economics"
author: "[Kyle Raze](https://kyleraze.com)"
date: "Spring 2021"
output:
  xaringan::moon_reader:
    css: ['default', 'metropolis', 'metropolis-fonts', 'my-css.css']
    self_contained: false
    nature:
      highlightStyle: github
      highlightLines: true
      countIncrementalSlides: false
      beforeInit: "https://platform.twitter.com/widgets.js"
      ratio: "16:9"
---

```{r Setup, include = F}
options(htmltools.dir.version = FALSE)
library(pacman)
p_load(ggthemes, xaringanExtra, ggdag, viridis, knitr, dslabs, gapminder, extrafont, Ecdat, wooldridge, tidyverse, magrittr, janitor, kableExtra)
# Define colors
red_pink <- "#e64173"
met_slate <- "#272822" # metropolis font color 
purple <- "#9370DB"
green <- "#007935"
light_green <- "#7DBA97"
orange <- "#FD5F00"
turquoise <- "#44C1C4"
# Notes directory
dir_slides <- "~/GitHub/Intro_Labor_S21/Lectures/05-Workers/"
# Knitr options
opts_chunk$set(
  comment = "#>",
  fig.align = "center",
  fig.height = 7,
  fig.width = 10.5,
  #dpi = 300,
  #cache = T,
  warning = F,
  message = F
)  
theme_simple <- theme_bw() + theme(
  axis.line = element_line(color = met_slate),
  panel.grid = element_blank(),
  rect = element_blank(),
  strip.text = element_blank(),
  text = element_text(family = "Fira Sans", color = met_slate, size = 17),
  axis.text.x = element_text(size = 12),
  axis.text.y = element_text(size = 12),
  axis.ticks = element_blank()
)
theme_market <- theme_bw() + theme(
  axis.line = element_line(color = met_slate),
  panel.grid = element_blank(),
  rect = element_blank(),
  strip.text = element_blank(),
  text = element_text(family = "Fira Sans", color = met_slate, size = 17),
  axis.title.x = element_text(hjust = 1, size = 17),
  axis.title.y = element_text(hjust = 1, angle = 0, size = 17),
  # axis.text.x = element_text(size = 12),
  # axis.text.y = element_text(size = 12),
  axis.ticks = element_blank()
)
theme_gif <- theme_bw() + theme(
  axis.line = element_line(color = met_slate),
  panel.grid = element_blank(),
  rect = element_blank(),
  text = element_text(family = "Fira Sans", color = met_slate, size = 17),
  axis.text.x = element_text(size = 12),
  axis.text.y = element_text(size = 12),
  axis.ticks = element_blank()
)
wrapper <- function(x, ...) paste(strwrap(x, ...), collapse = "\n")
shift_axis <- function(p, y=0){
  g <- ggplotGrob(p)
  dummy <- data.frame(y=y)
  ax <- g[["grobs"]][g$layout$name == "axis-b"][[1]]
  p + annotation_custom(grid::grobTree(ax, vp = grid::viewport(y=1, height=sum(ax$height))), 
                        ymax=y, ymin=y) +
    geom_hline(aes(yintercept=y), data = dummy, size = 0.5, color = met_slate) +
    theme(axis.text.x = element_blank(), 
          axis.ticks.x = element_blank())
}

xaringanExtra::use_scribble()
```

# Agenda

1. Production technology
    - Review
    - Valuing production
2. Factor demand
    - Hiring in the short run
    - Hiring in the long run
    - Labor demand curve
3. Robot tax, featuring Bill Gates

---
class: inverse, middle

# Production technology

---
# Production technology

.pull-left[
```{r, echo = FALSE, fig.height = 5.5, fig.width = 5.5, dev = "svg"}
total_product <- function(x) - 0.5 * x ^ 3 + 5 * x ^ 2 
marginal_product <- function(x) - 1.5 * x ^ 2 + 10 * x
inflection <- uniroot(function(x) 10 - 3 * x, c(0, 7))$root
average_product <- function(x) - 0.5 * x ^ 2 + 5 * x 

plot <- ggplot() +
  stat_function(
    data = tibble(x = 0:10),
    xlim = c(0, 7),
    fun = total_product,
    aes(x = x),
    color = purple,
    size = 1,
  ) +
  scale_x_continuous(limits = c(0, 7.5), expand = c(0, 0), breaks = seq(0, 7, 1)) +
  scale_y_continuous(limits = c(0, 85), expand = c(0, 0), breaks = scales::pretty_breaks()) +
  labs(x = "Number of workers (E)", y = "Output (q)") +

  theme_simple +
  theme(axis.title.x = element_text(margin = margin(t = 10)),
        axis.title.y = element_text(margin = margin(r = 10)))
plot
```
]
.pull-right[
## .hi-purple[Total product of labor]

> The amount of output from a given quantity of labor, *holding the amount of capital and other inputs constant*.

]

---
# Production technology

.pull-left[
```{r, echo = FALSE, fig.height = 5.5, fig.width = 5.5, dev = "svg"}
ggplot() +
  stat_function(
    data = tibble(x = 0:10),
    xlim = c(0, 7),
    fun = total_product,
    aes(x = x),
    color = purple,
    size = 1,
  ) +
  scale_x_continuous(limits = c(0, 7.5), expand = c(0, 0), breaks = seq(0, 7, 1)) +
  scale_y_continuous(limits = c(0, 85), expand = c(0, 0), breaks = scales::pretty_breaks()) +
  labs(x = "Number of workers (E)", y = "Output (q)") +
  theme_simple +
  theme(axis.title.x = element_text(margin = margin(t = 10)),
        axis.title.y = element_text(margin = margin(r = 10))) +
  annotate("text", label = expression(Delta*"q"), x = 2, y = (total_product(3) + total_product(4))/2, color = met_slate, family = "Fira Sans", size = 4) +
  annotate("text", label = expression(Delta*"E"), x = 3.5, y = 7.5, color = met_slate, family = "Fira Sans", size = 4) +
  geom_segment(
    aes(
      x = 3 + 0.1,
      y = 5,
      xend = 4 - 0.1,
      yend = 5
    ),
    arrow = arrow(
      angle = 20,
      length = unit(0.2, "cm"),
      type = "closed"
    ),
    color = met_slate
  ) +
  geom_segment(
    aes(
      x = 1.75,
      y = total_product(3) + 1,
      xend = 1.75,
      yend = total_product(4) - 1
    ),
    arrow = arrow(
      angle = 20,
      length = unit(0.2, "cm"),
      type = "closed"
    ),
    color = met_slate
  ) +
  annotate(geom = "segment", x = 0, y = total_product(3), xend = 3, yend = total_product(3),
           linetype = "dashed", color = met_slate, alpha = 1) +
  annotate(geom = "segment", x = 3, y = 0, xend = 3, yend = total_product(3),
           linetype = "dashed", color = met_slate, alpha = 1) +
  annotate(geom = "point", x = 3, y = total_product(3), size = 2, color = met_slate, alpha = 1) +
  annotate(geom = "segment", x = 0, y = total_product(4), xend = 4, yend = total_product(4),
           linetype = "dashed", color = met_slate, alpha = 1) +
  annotate(geom = "segment", x = 4, y = 0, xend = 4, yend = total_product(4),
           linetype = "dashed", color = met_slate, alpha = 1) +
  annotate(geom = "point", x = 4, y = total_product(4), size = 2, color = met_slate, alpha = 1)
```
]
.pull-right[
## .hi-purple[Marginal product of labor]

> The change in output from a one-unit increase in labor, *holding the amount of capital and other inputs constant*.

$$\text{MP}_E = \dfrac{\Delta q}{\Delta E}$$

]

---
# Production technology

.pull-left[
```{r, echo = FALSE, fig.height = 5.5, fig.width = 5.5, dev = "svg"}
ggplot() +
  stat_function(
    data = tibble(x = 0:10),
    xlim = c(0, 7),
    fun = marginal_product,
    aes(x = x),
    color = purple,
    size = 1,
  ) +
  scale_x_continuous(limits = c(0, 7.5), expand = c(0, 0), breaks = seq(0, 7, 1)) +
  scale_y_continuous(limits = c(0, 17.5), expand = c(0, 0), breaks = scales::pretty_breaks()) +
  labs(x = "Number of workers (E)", y = "Output (q)") +
  theme_simple +
  theme(axis.title.x = element_text(margin = margin(t = 10)),
        axis.title.y = element_text(margin = margin(r = 10)))
```
]
.pull-right[
## .hi-purple[Marginal product of labor]

> The change in output from a one-unit increase in labor, *holding the amount of capital and other inputs constant*.

$$\text{MP}_E = \dfrac{\Delta q}{\Delta E}$$

]

---
# Production technology

.pull-left[
```{r, echo = FALSE, fig.height = 5.5, fig.width = 5.5, dev = "svg"}
ggplot() +
  stat_function(
    data = tibble(x = 0:10),
    xlim = c(0, 7),
    fun = marginal_product,
    aes(x = x),
    color = purple,
    size = 1,
  ) +
  scale_x_continuous(limits = c(0, 7.5), expand = c(0, 0), breaks = seq(0, 7, 1)) +
  scale_y_continuous(limits = c(0, 17.5), expand = c(0, 0), breaks = scales::pretty_breaks()) +
  labs(x = "Units of capital (K)", y = "Output (q)") +
  theme_simple +
  theme(axis.title.x = element_text(margin = margin(t = 10)),
        axis.title.y = element_text(margin = margin(r = 10)))
```
]
.pull-right[
## .hi-purple[Marginal product of capital]

> The change in output from a one-unit increase in capital, *holding the amount of labor and other inputs constant*.

$$\text{MP}_K = \dfrac{\Delta q}{\Delta K}$$
]

---
# Production technology

.pull-left[
```{r, echo = FALSE, fig.height = 5.5, fig.width = 5.5, dev = "svg"}
ggplot() +
  stat_function(
    data = tibble(x = 0:10),
    xlim = c(0, 7),
    fun = marginal_product,
    aes(x = x),
    color = purple,
    size = 1,
  ) +
  scale_x_continuous(limits = c(0, 7.5), expand = c(0, 0), breaks = seq(0, 7, 1)) +
  scale_y_continuous(limits = c(0, 17.5), expand = c(0, 0), breaks = scales::pretty_breaks()) +
  labs(x = "Number of workers (E)", y = "Output (q)") +
  theme_simple +
  theme(axis.title.x = element_text(margin = margin(t = 10)),
        axis.title.y = element_text(margin = margin(r = 10))) +
  geom_vline(xintercept = inflection, color = met_slate, linetype = "dashed") +
  geom_segment(
    aes(
      x = inflection + 0.1,
      y = 17,
      xend = 7,
      yend = 17
    ),
    arrow = arrow(
      angle = 20,
      length = unit(0.2, "cm"),
      type = "closed"
    ),
    color = met_slate
  ) +
  annotate("label", label = "MP decreasing", x = (inflection + 7) / 2, y = 17, color = met_slate, family = "Fira Sans", size = 4)
```
]
.pull-right[
## .hi-purple["Law" of diminishing returns].super[.hi-pink[<span>&#8224;</span>]]

.footnote[.super[.hi-pink[<span>&#8224;</span>]] Also known as "diminishing marginal productivity."]

> For a fixed amount of capital, the **marginal product** of labor **eventually declines** as employment increases.

Early gains from specialization give way to crowded capital inputs.

]

---
# Production technology

.pull-left[
```{r, echo = FALSE, fig.height = 5.5, fig.width = 5.5, dev = "svg"}
ggplot() +
  stat_function(
    data = tibble(x = 0:10),
    xlim = c(0, 7),
    fun = average_product,
    aes(x = x),
    color = purple,
    size = 1,
  ) +
  scale_x_continuous(limits = c(0, 7.5), expand = c(0, 0), breaks = seq(0, 7, 1)) +
  scale_y_continuous(limits = c(0, 17.5), expand = c(0, 0), breaks = scales::pretty_breaks()) +
  labs(x = "Number of workers (E)", y = "Output (q)") +
  theme_simple +
  theme(axis.title.x = element_text(margin = margin(t = 10)),
        axis.title.y = element_text(margin = margin(r = 10)))
```
]
.pull-right[
## .hi-purple[Average product of labor]

> The amount of output produced by the typical worker, *holding the amount of capital and other inputs constant*.

$$\text{AP}_E = \dfrac{q}{E}$$

]

---
# Production technology

.pull-left[
```{r, echo = FALSE, fig.height = 5.5, fig.width = 5.5, dev = "svg"}
ggplot() +
  stat_function(
    data = tibble(x = 0:10),
    xlim = c(0, 7),
    fun = average_product,
    aes(x = x),
    color = purple,
    size = 1,
  ) +
  stat_function(
    data = tibble(x = 0:10),
    xlim = c(0, 7),
    fun = marginal_product,
    aes(x = x),
    color = purple,
    size = 1,
  ) +
  scale_x_continuous(limits = c(0, 7.5), expand = c(0, 0), breaks = seq(0, 7, 1)) +
  scale_y_continuous(limits = c(0, 17.5), expand = c(0, 0), breaks = scales::pretty_breaks()) +
  labs(x = "Number of workers (E)", y = "Output (q)") +
  theme_simple +
  theme(axis.title.x = element_text(margin = margin(t = 10)),
        axis.title.y = element_text(margin = margin(r = 10))) +
  annotate("label", label = "AP", x = 6, y = average_product(6), color = purple, family = "Fira Sans", size = 4) +
  annotate("label", label = "MP", x = 6, y = marginal_product(6), color = purple, family = "Fira Sans", size = 4)
```
]
.pull-right[
## .hi-purple[Average product of labor]

The marginal product curve intersects the average product curve where average product is maximized.

- When the average product curve is **increasing**, marginal product **is greater than** average product.
- When the average product curve is **decreasing**, marginal product **is less than** average product.

]

---
# Production technology

**Q:** What is the marginal product of each worker?

```{R, echo = F, escape = F}
data.frame(
  v1 = c(0, 1, 2, 3, 4, 5, 6, 7),
  v2 = c(0, 1000, 1800, 2400, 2800, 3000, 3000, 2800),
  v4 = c("&mdash;", "", "", "", "", "", "", ""),
  v4 = c("&mdash;", "", "", "", "", "", "", "")
) %>% kable(
  escape = F,
  col.names = c("Workers (E)", "Output (q)", "Marginal product (MP)", "Average product (AP)"),
  align = c("c", "c", "c", "c")#,
) %>%
row_spec(1:8, color = met_slate) %>%
row_spec(1:8, extra_css = "line-height: 110%;")
```

---
count: false
# Production technology

**Q:** What is the marginal product of each worker?

```{R, echo = F, escape = F}
data.frame(
  v1 = c(0, 1, 2, 3, 4, 5, 6, 7),
  v2 = c(0, 1000, 1800, 2400, 2800, 3000, 3000, 2800),
  v4 = c("&mdash;", 1000, "", "", "", "", "", ""),
  v4 = c("&mdash;", "", "", "", "", "", "", "")
) %>% kable(
  escape = F,
  col.names = c("Workers (E)", "Output (q)", "Marginal product (MP)", "Average product (AP)"),
  align = c("c", "c", "c", "c")#,
) %>%
row_spec(1:8, color = met_slate) %>%
row_spec(1:8, extra_css = "line-height: 110%;")
```

---
count: false
# Production technology

**Q:** What is the marginal product of each worker?

```{R, echo = F, escape = F}
data.frame(
  v1 = c(0, 1, 2, 3, 4, 5, 6, 7),
  v2 = c(0, 1000, 1800, 2400, 2800, 3000, 3000, 2800),
  v4 = c("&mdash;", 1000, 800, "", "", "", "", ""),
  v4 = c("&mdash;", "", "", "", "", "", "", "")
) %>% kable(
  escape = F,
  col.names = c("Workers (E)", "Output (q)", "Marginal product (MP)", "Average product (AP)"),
  align = c("c", "c", "c", "c")#,
) %>%
row_spec(1:8, color = met_slate) %>%
row_spec(1:8, extra_css = "line-height: 110%;")
```

---
count: false
# Production technology

**Q:** What is the marginal product of each worker?

```{R, echo = F, escape = F}
data.frame(
  v1 = c(0, 1, 2, 3, 4, 5, 6, 7),
  v2 = c(0, 1000, 1800, 2400, 2800, 3000, 3000, 2800),
  v4 = c("&mdash;", 1000, 800, 600, "", "", "", ""),
  v4 = c("&mdash;", "", "", "", "", "", "", "")
) %>% kable(
  escape = F,
  col.names = c("Workers (E)", "Output (q)", "Marginal product (MP)", "Average product (AP)"),
  align = c("c", "c", "c", "c")#,
) %>%
row_spec(1:8, color = met_slate) %>%
row_spec(1:8, extra_css = "line-height: 110%;")
```

---
count: false
# Production technology

**Q:** What is the marginal product of each worker?

```{R, echo = F, escape = F}
data.frame(
  v1 = c(0, 1, 2, 3, 4, 5, 6, 7),
  v2 = c(0, 1000, 1800, 2400, 2800, 3000, 3000, 2800),
  v3 = c("&mdash;", 1000, 800, 600, 400, 200, 0, -200),
  v4 = c("&mdash;", "", "", "", "", "", "", "")
) %>% kable(
  escape = F,
  col.names = c("Workers (E)", "Output (q)", "Marginal product (MP)", "Average product (AP)"),
  align = c("c", "c", "c", "c")#,
) %>%
row_spec(1:8, color = met_slate) %>%
row_spec(1:8, extra_css = "line-height: 110%;")
```

---
# Production technology

**Q:** What is the average product for each level of employment?

```{R, echo = F, escape = F}
data.frame(
  v1 = c(0, 1, 2, 3, 4, 5, 6, 7),
  v2 = c(0, 1000, 1800, 2400, 2800, 3000, 3000, 2800),
  v3 = c("&mdash;", 1000, 800, 600, 400, 200, 0, -200),
  v4 = c("&mdash;", "", "", "", "", "", "", "")
) %>% kable(
  escape = F,
  col.names = c("Workers (E)", "Output (q)", "Marginal product (MP)", "Average product (AP)"),
  align = c("c", "c", "c", "c")#,
) %>%
row_spec(1:8, color = met_slate) %>%
row_spec(1:8, extra_css = "line-height: 110%;")
```

---
count: false
# Production technology

**Q:** What is the average product for each level of employment?

```{R, echo = F, escape = F}
data.frame(
  v1 = c(0, 1, 2, 3, 4, 5, 6, 7),
  v2 = c(0, 1000, 1800, 2400, 2800, 3000, 3000, 2800),
  v3 = c("&mdash;", 1000, 800, 600, 400, 200, 0, -200),
  v4 = c("&mdash;", 1000, 900, 800, 700, 600, 500, 400)
) %>% kable(
  escape = F,
  col.names = c("Workers (E)", "Output (q)", "Marginal product (MP)", "Average product (AP)"),
  align = c("c", "c", "c", "c")#,
) %>%
row_spec(1:8, color = met_slate) %>%
row_spec(1:8, extra_css = "line-height: 110%;")
```

---
# Valuing production

## **Marginal revenue product of labor**

> The change in total revenue from a one-unit increase in labor, *holding capital and other inputs constant*.

$$\begin{align} \text{MRP}_E &= \dfrac{\Delta\text{TR}}{\Delta q} \times \dfrac{\Delta q}{\Delta E} \\ &= \text{MR} \times \text{MP}_E \end{align}$$

--

In a **perfectly competitive market** for the output good, price does not depend on a firm's level of output (*i.e.,* $\text{MR} = p$).

- **Implication?** Marginal revenue product is the same as the **value of marginal product of labor**:

$$\text{VMP}_E = \text{MRP}_E = p \times \text{MP}_E$$

---
# Valuing production

## **Value of average product of labor**

> The amount of revenue the typical worker produces for the firm.

$$\text{VAP}_E = p \times \text{AP}_E$$


---
# Valuing production

.pull-left[
```{r, echo = FALSE, fig.height = 5.5, fig.width = 5.5, dev = "svg"}
vmp <- function(x) (- 1.5 * x ^ 2 + 10 * x) * 150
vap <- function(x) (- 0.5 * x ^ 2 + 5 * x) * 150 

ggplot() +
  stat_function(
    data = tibble(x = 0:10),
    xlim = c(0, 7),
    fun = vap,
    aes(x = x),
    color = purple,
    size = 1,
  ) +
  stat_function(
    data = tibble(x = 0:10),
    xlim = c(0, 7),
    fun = vmp,
    aes(x = x),
    color = purple,
    size = 1,
  ) +
  scale_x_continuous(limits = c(0, 7.5), expand = c(0, 0), breaks = seq(0, 7, 1)) +
  scale_y_continuous(limits = c(0, 2750), expand = c(0, 0), breaks = seq(0, 2500, 500), labels = scales::dollar) +
  labs(x = "Number of workers (E)", y = "Dollars") +
  theme_simple +
  theme(axis.title.x = element_text(margin = margin(t = 10)),
        axis.title.y = element_text(margin = margin(r = 10))) +
  annotate("label", label = "VAP", x = 6, y = vap(6), color = purple, family = "Fira Sans", size = 4) +
  annotate("label", label = "VMP = MRP", x = 6, y = vmp(6), color = purple, family = "Fira Sans", size = 4)
```
]
.pull-right[

The relationship between the value of average product and the value of marginal product is the same as the relationship between average product and marginal product.

**The difference?** The average product and marginal product curves are now "scaled up" by the price of the output good.

- Vertical axis is now in dollars instead of units of output.
- In this example, $p$ .mono[=] $150.

]

---
# Valuing production

**Q:** If the price of the output good is $2, what is the marginal revenue product of each worker?

```{R, echo = F, escape = F}
data.frame(
  v1 = c(0, 1, 2, 3, 4, 5, 6, 7),
  v2 = c(0, 1000, 1800, 2400, 2800, 3000, 3000, 2800),
  v3 = c("&mdash;", 1000, 800, 600, 400, 200, 0, -200),
  v4 = c("&mdash;", 1000, 900, 800, 700, 600, 500, 400),
  v5 = c("&mdash;", "", "", "", "", "", "", ""),
  v6 = c("&mdash;", "", "", "", "", "", "", "")
) %>% kable(
  escape = F,
  col.names = c("Workers (E)", "Output (q)", "MP", "AP", "Marginal revenue product (MRP)", "Value of MP (VAP)"),
  align = c("c", "c", "c", "c", "c", "c")#,
) %>%
row_spec(1:8, color = met_slate) %>%
row_spec(1:8, extra_css = "line-height: 110%;")
```

---
count: false
# Valuing production

**Q:** If the price of the output good is $2, what is the marginal revenue product of each worker?

```{R, echo = F, escape = F}
data.frame(
  v1 = c(0, 1, 2, 3, 4, 5, 6, 7),
  v2 = c(0, 1000, 1800, 2400, 2800, 3000, 3000, 2800),
  v3 = c("&mdash;", 1000, 800, 600, 400, 200, 0, -200),
  v4 = c("&mdash;", 1000, 900, 800, 700, 600, 500, 400),
  v5 = c("&mdash;", "$2000", "$1600", "$1200", "$800", "$400", "$0", "-$400"),
  v6 = c("&mdash;", "", "", "", "", "", "", "")
) %>% kable(
  escape = F,
  col.names = c("Workers (E)", "Output (q)", "MP", "AP", "Marginal revenue product (MRP)", "Value of MP (VAP)"),
  align = c("c", "c", "c", "c", "c", "c")#,
) %>%
row_spec(1:8, color = met_slate) %>%
row_spec(1:8, extra_css = "line-height: 110%;")
```

---
# Valuing production

**Q:** If the price of the output good is $2, what is the value of average product?

```{R, echo = F, escape = F}
data.frame(
  v1 = c(0, 1, 2, 3, 4, 5, 6, 7),
  v2 = c(0, 1000, 1800, 2400, 2800, 3000, 3000, 2800),
  v3 = c("&mdash;", 1000, 800, 600, 400, 200, 0, -200),
  v4 = c("&mdash;", 1000, 900, 800, 700, 600, 500, 400),
  v5 = c("&mdash;", "$2000", "$1600", "$1200", "$800", "$400", "$0", "-$400"),
  v6 = c("&mdash;", "", "", "", "", "", "", "")
) %>% kable(
  escape = F,
  col.names = c("Workers (E)", "Output (q)", "MP", "AP", "Marginal revenue product (MRP)", "Value of MP (VAP)"),
  align = c("c", "c", "c", "c", "c", "c")#,
) %>%
row_spec(1:8, color = met_slate) %>%
row_spec(1:8, extra_css = "line-height: 110%;")
```

---
count: false
# Valuing production

**Q:** If the price of the output good is $2, what is the value of average product?

```{R, echo = F, escape = F}
data.frame(
  v1 = c(0, 1, 2, 3, 4, 5, 6, 7),
  v2 = c(0, 1000, 1800, 2400, 2800, 3000, 3000, 2800),
  v3 = c("&mdash;", 1000, 800, 600, 400, 200, 0, -200),
  v4 = c("&mdash;", 1000, 900, 800, 700, 600, 500, 400),
  v5 = c("&mdash;", "$2000", "$1600", "$1200", "$800", "$400", "$0", "-$400"),
  v6 = c("&mdash;", "$2000", "$1800", "$1600", "$1400", "$1200", "$1000", "$800")
) %>% kable(
  escape = F,
  col.names = c("Workers (E)", "Output (q)", "MP", "AP", "Marginal revenue product (MRP)", "Value of MP (VAP)"),
  align = c("c", "c", "c", "c", "c", "c")#,
) %>%
row_spec(1:8, color = met_slate) %>%
row_spec(1:8, extra_css = "line-height: 110%;")
```

---
class: inverse, middle

# Factor demand

---
# Short run *vs.* long run

## **Short run**

> The time span over which a business can adjust some inputs (*e.g.,* labor), but cannot adjust others (*e.g.,* capital).

In the short run, we will assume that the level of employment **E** can vary, but capital **K** is fixed at an initial level **K.sub[0]**.

- **Example:** A shop foreman can hire or fire workers or adjust hours, but they are unable to expand the factory by adding assembly lines, heavy machinery, or a new building.

---
# Short run *vs.* long run

## **Long run**

> The time span over which a business can adjust all inputs.

In the long-run, we will assume that both the level of employment **E** and capital **K** can vary.

- **Example:** An office manager can hire or fire workers, adjust hours, buy or sell desks and computers, or lease new office space.

---
class: clear-slide

**Q:** If the price of the output good is $2 and the market wage is $500 per week, how many workers should the employer hire?

```{R, echo = F, escape = F}
tab <- data.frame(
  v1 = c(0, 1, 2, 3, 4, 5, 6, 7),
  v2 = c(0, 1000, 1800, 2400, 2800, 3000, 3000, 2800),
  v3 = c("&mdash;", 1000, 800, 600, 400, 200, 0, -200),
  v4 = c("&mdash;", 1000, 900, 800, 700, 600, 500, 400),
  v5 = c("&mdash;", "$2000", "$1600", "$1200", "$800", "$400", "$0", "-$400"),
  v6 = c("&mdash;", "$2000", "$1800", "$1600", "$1400", "$1200", "$1000", "$800"),
  v7 = c("$500", "$500", "$500", "$500", "$500", "$500", "$500", "$500")
) %>% kable(
  escape = F,
  col.names = c("Workers (E)", "Output (q)", "&nbsp;&nbsp;&nbsp; MP &nbsp;&nbsp;&nbsp;", "&nbsp;&nbsp;&nbsp; AP &nbsp;&nbsp;&nbsp;", "&nbsp;&nbsp;&nbsp; MRP &nbsp;&nbsp;&nbsp;", "&nbsp;&nbsp;&nbsp; VAP &nbsp;&nbsp;&nbsp;", "Wage (w)"),
  align = c("c", "c", "c", "c", "c", "c", "c")#,
) %>%
row_spec(1:8, color = met_slate) %>%
row_spec(1:8, extra_css = "line-height: 110%;")
tab
```

--

The employer should **think at the margin** and keep hiring as long as **MRP** $\geq$ **w**.

--

**A:** The employer should hire 4 workers.

---
# Hiring in the short run

.pull-left[
```{r, echo = FALSE, fig.height = 5.5, fig.width = 5.5, dev = "svg"}
wage <- 1000
vmp <- function(x) (- 1.5 * x ^ 2 + 10 * x) * 150
vap <- function(x) (- 0.5 * x ^ 2 + 5 * x) * 150 
break_even <- uniroot(function(x) (- 1.5 * x ^ 2 + 10 * x) * 150 - (- 0.5 * x ^ 2 + 5 * x) * 150, c(inflection, 7))$ root
optimal_e <- uniroot(function(x) (- 1.5 * x ^ 2 + 10 * x) * 150 - wage, c(inflection, 7))$root

ggplot() +
  stat_function(
    data = tibble(x = 0:10),
    xlim = c(0, 7),
    fun = vap,
    aes(x = x),
    color = purple,
    size = 1,
  ) +
  stat_function(
    data = tibble(x = 0:10),
    xlim = c(0, 7),
    fun = vmp,
    aes(x = x),
    color = purple,
    size = 1,
  ) +
  scale_x_continuous(limits = c(0, 7.5), expand = c(0, 0), breaks = seq(0, 7, 1)) +
  scale_y_continuous(limits = c(0, 2750), expand = c(0, 0), breaks = seq(0, 2500, 500), labels = scales::dollar) +
  labs(x = "Number of workers (E)", y = "Dollars") +
  theme_simple +
  theme(axis.title.x = element_text(margin = margin(t = 10)),
        axis.title.y = element_text(margin = margin(r = 10))) +
  geom_hline(yintercept = wage, size = 1, color = green) +
  annotate(geom = "segment", x = optimal_e, y = 0, xend = optimal_e, yend = wage,
           linetype = "dashed", color = met_slate, alpha = 1) +
  annotate(geom = "point", x = optimal_e, y = wage, size = 2, color = met_slate, alpha = 1) +
  annotate("label", label = "VAP", x = 4, y = vap(4), color = purple, family = "Fira Sans", size = 4) +
  annotate("label", label = "VMP = MRP", x = 4, y = vmp(4), color = purple, family = "Fira Sans", size = 4) +
  annotate("label", label = "w", x = 4, y = 1000, color = green, family = "Fira Sans", size = 4)
```
]
.pull-right[

## **Profit maximization**

An employer maximizes profit by hiring $E^*$ workers where $w = \text{MRP}_E$ and $\text{MRP}_E$ is decreasing.

]

---
# Hiring in the short run

.pull-left[
```{r, echo = FALSE, fig.height = 5.5, fig.width = 5.5, dev = "svg"}
plot <- ggplot() +
  stat_function(
    data = tibble(x = 0:10),
    xlim = c(0, 7),
    fun = vap,
    aes(x = x),
    color = purple,
    size = 1,
  ) +
  stat_function(
    data = tibble(x = 0:10),
    xlim = c(0, 7),
    fun = vmp,
    aes(x = x),
    color = purple,
    size = 1,
  ) +
  scale_x_continuous(limits = c(0, 7.5), expand = c(0, 0), breaks = seq(0, 7, 1)) +
  scale_y_continuous(limits = c(0, 2750), expand = c(0, 0), breaks = seq(0, 2500, 500), labels = scales::dollar) +
  labs(x = "Number of workers (E)", y = "Dollars") +
  theme_simple +
  theme(axis.title.x = element_text(margin = margin(t = 10)),
        axis.title.y = element_text(margin = margin(r = 10))) +
  geom_ribbon(data = tibble(x = seq(0, inflection, 0.001)),
    aes(x = x, ymin = 0, ymax = 2750), 
    fill = purple, alpha = 0.2, linetype = "blank") +
  geom_vline(xintercept = inflection, color = met_slate, linetype = "dashed") +
  annotate("label", label = "VAP", x = 6, y = vap(6), color = purple, family = "Fira Sans", size = 4) +
  annotate("label", label = "VMP = MRP", x = 6, y = vmp(6), color = purple, family = "Fira Sans", size = 4)
plot
```
]
.pull-right[

## **Profit maximization**

**Q:** Why wouldn't an employer stop hiring while marginal revenue product is increasing?


]

---
count: false
# Hiring in the short run

.pull-left[
```{r, echo = FALSE, fig.height = 5.5, fig.width = 5.5, dev = "svg"}
plot
```
]
.pull-right[

## **Profit maximization**

**Q:** Why wouldn't an employer stop hiring while marginal revenue product is increasing?

**A:** Because the employer would be "leaving money on the table."

- The employer could increase profit at the margin by hiring an additional worker.

]

---
# Hiring in the short run

.pull-left[
```{r, echo = FALSE, fig.height = 5.5, fig.width = 5.5, dev = "svg"}
plot <- ggplot() +
  stat_function(
    data = tibble(x = 0:10),
    xlim = c(0, 7),
    fun = vap,
    aes(x = x),
    color = purple,
    size = 1,
  ) +
  stat_function(
    data = tibble(x = 0:10),
    xlim = c(0, 7),
    fun = vmp,
    aes(x = x),
    color = purple,
    size = 1,
  ) +
  scale_x_continuous(limits = c(0, 7.5), expand = c(0, 0), breaks = seq(0, 7, 1)) +
  scale_y_continuous(limits = c(0, 2750), expand = c(0, 0), breaks = seq(0, 2500, 500), labels = scales::dollar) +
  labs(x = "Number of workers (E)", y = "Dollars") +
  theme_simple +
  theme(axis.title.x = element_text(margin = margin(t = 10)),
        axis.title.y = element_text(margin = margin(r = 10))) +
  geom_ribbon(data = tibble(x = seq(inflection, break_even, 0.001)),
    aes(x = x, ymin = 0, ymax = 2750), 
    fill = purple, alpha = 0.2, linetype = "blank") +
  geom_vline(xintercept = inflection, color = met_slate, linetype = "dashed") +
  geom_vline(xintercept = break_even, color = met_slate, linetype = "dashed") +
  annotate("label", label = "VAP", x = 6, y = vap(6), color = purple, family = "Fira Sans", size = 4) +
  annotate("label", label = "VMP = MRP", x = 6, y = vmp(6), color = purple, family = "Fira Sans", size = 4)
plot
```
]
.pull-right[

## **Profit maximization**

**Q:** What happens when marginal revenue product exceeds the value of average product? 


]

---
count: false
# Hiring in the short run

.pull-left[
```{r, echo = FALSE, fig.height = 5.5, fig.width = 5.5, dev = "svg"}
plot
```
]
.pull-right[

## **Profit maximization**

**Q:** What happens when marginal revenue product exceeds the value of average product? 

**A:** The employer will shut down the business.

- Any wage that intersects MRP in this region will exceed VAP .mono[-->] business would operate at a loss!

]

---
# Hiring in the short run

.pull-left[
```{r, echo = FALSE, fig.height = 5.5, fig.width = 5.5, dev = "svg"}
ggplot() +
  stat_function(
    data = tibble(x = 0:10),
    xlim = c(0, 7),
    fun = vap,
    aes(x = x),
    color = purple,
    size = 1,
    alpha = 0.5
  ) +
  stat_function(
    data = tibble(x = 0:10),
    xlim = c(0, 7),
    fun = vmp,
    aes(x = x),
    color = purple,
    size = 1,
    alpha = 0.5
  ) +
  stat_function(
    data = tibble(x = 0:10),
    xlim = c(break_even, 7),
    fun = vmp,
    aes(x = x),
    color = purple,
    size = 2,
  ) +
  scale_x_continuous(limits = c(0, 7.5), expand = c(0, 0), breaks = seq(0, 7, 1)) +
  scale_y_continuous(limits = c(0, 2750), expand = c(0, 0), breaks = seq(0, 2500, 500), labels = scales::dollar) +
  labs(x = "Number of workers (E)", y = "Wage") +
  theme_simple +
  theme(axis.title.x = element_text(margin = margin(t = 10)),
        axis.title.y = element_text(margin = margin(r = 10))) +
  annotate("label", label = "VAP", x = 4, y = vap(4), color = purple, family = "Fira Sans", size = 4, alpha = 1) +
  annotate("label", label = "VMP = MRP", x = 4, y = vmp(4), color = purple, family = "Fira Sans", size = 4, alpha = 1) +
annotate("label", label = "D", x = 6, y = vmp(6), color = purple, family = "Fira Sans", size = 5)
```
]
.pull-right[

## .hi-purple[Labor demand]

The portion of the MRP curve below the VAP curve traces out the .hi-purple[short-run labor demand] curve.

- Describes how an employer adjusts employment as the market wage changes, holding other inputs constant.
- **Downward sloping:** An employer wants to reduce staffing as the wage increases, *all else equal*.

]

---
# Hiring in the long run

## **Profit maximization**

In the long run, employers have the flexibility to adjust both labor and capital.

**Q:** How does the intuition for long-run factor demand compare to the intuition for the short run?

--

**A:** Employers will still make decisions ***at the margin*!**

- The underlying model is more elaborate and **our time is scarce**, so we will forgo a full derivation of the long-run profit maximization conditions.

---
# Hiring in the long run

## **Profit maximization**

As in the short run, an employer will choose the profit-maximizing level of employment $E^*$ such that $$\begin{align} w &= \text{MRP}_E \\ &= p \times \text{MP}_E \end{align}$$

--

- The employer will keep hiring until the **marginal cost** of the last worker **equals** the **marginal benefit** of the last worker.


--

Likewise, an employer will choose the profit-maximizing quantity of capital $K^*$ such that $$\begin{align} r &= \text{MRP}_K \\ &= p \times \text{MP}_K \end{align}$$

--

- The employer will keep purchasing capital until the **marginal cost** of the last unit of capital **equals** the **marginal benefit** of the last unit of capital.

---
# Hiring in the long run

## **Intuition?**

At the optimal, profit-maximizing bundle of labor and capital, we have $$\begin{align} w = p \times \text{MP}_E && r = p \times \text{MP}_K \end{align}$$

--

Dividing by marginal product, we obtain $$\begin{align} p = \dfrac{w}{\text{MP}_E} && p = \dfrac{r}{\text{MP}_K} \end{align}$$

--

Now we can equate both conditions to obtain the **long-run profit maximization condition** $$\begin{align} \dfrac{w}{\text{MP}_E} = \dfrac{r}{\text{MP}_K} \end{align}$$

---
# Hiring in the long run

## **Intuition?**

**Q:** What can we learn from the long-run profit maximization condition? $$\begin{align} \dfrac{w}{\text{MP}_E} = \dfrac{r}{\text{MP}_K} \end{align}$$

- $\dfrac{w}{\text{MP}_E}$ represents the cost of producing one more unit of output using labor.
- $\dfrac{r}{\text{MP}_K}$ represents the cost of producing one more unit of output using capital.


--

**A:** At the profit-maximizing bundle, it would **not** be **cheaper to switch** from one input to the other.

- If it were cheaper to switch from labor to capital, then a **profit-maximizing employer would have already made the switch** (in the long run).

---
# Hiring in the long run

## **Intuition?**

Suppose that $w = 10$, $\text{MP}_E = 15$, $r = 5$, and $\text{MP}_K = 10$. Then $$\dfrac{w}{\text{MP}_E} = \dfrac{r}{\text{MP}_K} \implies \dfrac{10}{15} = \dfrac{5}{10} \implies \dfrac{2}{3} \neq \dfrac{1}{2}$$

--

This employer is not profit maximizing!

- The cost of producing one more unit of output using labor exceeds the cost of producing one more unit using capital.
- It would be **more profitable to switch**, at the margin, from labor to capital!

---
# Hiring in the long run

**Q:** How does an employer respond to an increase in the market wage?

--

- **A.sub[1]:** The employer will respond by hiring fewer workers.

--


- **A.sub[2]:** The employer will adjust the level of capital, but the direction is theoretically ambiguous.
    - When the number of workers decreases, there are fewer people on each machine, which can reduce $\text{MP}_K$.
    - The direction of the response will depends on the **scale** and **substitution** effects.

---
# Hiring in the long run

## **Scale effect**

Other things being equal, a **decrease** in the **price** of an input will **increase** the **quantity demanded** of that input.

- If the cost of production decreases, the employer will want to "scale up" production of the output good.
- Conversely, if the cost of production increases, the employer will "scale back" production.
--

- Analogous to the wealth effect for a worker..super[.hi-pink[<span>&#8224;</span>]]

.footnote[.super[.hi-pink[<span>&#8224;</span>]] We assume that labor and capital are "normal" inputs&mdash;production increases as the amount of labor and capital increase.]


---
# Hiring in the long run

## **Substitution effect**

Other things being equal, if the price of an input increases, **demand for the other input increases.**

- If labor becomes **relatively more expensive** than capital, then the employer will want to **substitute away** from labor and toward capital.
- If labor becomes **relatively cheaper** than capital, then the employer will want to **substitute toward** labor and away from capital.
--

- Analogous to the substitution effect for the worker.

---
# Hiring in the long run

## **Scale and substitution effects**

**Q:** How would a employer respond to an increase in the market wage?


|                     | Scale effect | Substitution effect |
|:-------------------:|:------------:|:-------------------:|
| $\Delta$ in labor   | $-$          | $-$                 |
| $\Delta$ in capital | $-$          | $+$                 |

--

**A.sub[K]:** For capital, it depends.

- If the scale effect dominates the substitution effect, then capital will eventually decrease.

--

**A.sub[E]:** For labor, the effect is unambiguous.

- The scale effect and substitution effect will move in the same direction for the input that undergoes a change in price.

---
# Hiring in the long run

## **Scale and substitution effects**

**Q:** What determines whether the scale or substitution effect dominates?

--

**A:** Whether labor and capital are .hi-pink[substitutes] or .hi-purple[complements].

--

- .hi-pink[Substitutes:] Inputs used in place of one another.
    - Self-checkout kiosk *vs.* cashier
    - Tax prep software *vs.* accountant
    - Robot *vs.* low-skill worker?
- .hi-purple[Complements:] Inputs used together.
    - Carpenter and hammer
    - Mail carrier and mail truck
    - Robot and high-skill worker?


---
# Hiring in the long run

### .hi-pink[Substitutes]

> Inputs used in place of one another.

Two inputs are said to be substitutes if the price of one input changes the demand of the other input .hi-pink[in the same direction.]

- Substitution effect outweighs the scale effect.

### .hi-purple[Complements]

> Inputs used together.

Two inputs are said to be complements if the price of one input changes the demand of the other input .hi-purple[in the opposite direction.]

- Scale effect outweighs the substitution effect.

---
# Hiring in the long run

### **Cross-elasticity of factor demand**

> A unit-free measure of the responsiveness of demand for one input to a change in the price of the other. 

**Labor responsiveness** to a change in the price of capital: $$\eta = \dfrac{\%\Delta E}{\%\Delta r} = \dfrac{(E_2 - E_1) / E_1}{(r_2 - r_1) / r_1}$$

**Capital responsiveness** to a change in the price of labor: $$\eta = \dfrac{\%\Delta K}{\%\Delta w} = \dfrac{(K_2 - K_1) / K_1}{(w_2 - w_1) / w_1}$$

--

$\eta > 0$ .mono[-->] substitutes .mono[-->] substitution effect dominates. <br>
$\eta < 0$ .mono[-->] complements .mono[-->] scale effect dominates.

---
# Market labor demand curve

.pull-left[
```{r, dev = "svg", echo = F, fig.height = 5.5, fig.width = 5.5}
sr_demand <- function(x) 50 - 0.75 * x
lr_demand <- function(x) 25 - 0.25 * x
  
plot <- ggplot() + 
  stat_function(
    data = tibble(x = 0:100),
    xlim = c(0, 100),
    aes(x = x),
    fun = lr_demand,
    color = purple,
    size = 1
  ) +
  annotate(
    "label",
    label = expression(D[LR]),
    x = 10,
    y = lr_demand(x = 10),
    color = purple,
    family = "Fira Sans",
    size = 5
  ) +
  stat_function(
    data = tibble(x = 0:100),
    xlim = c(0, 100),
    aes(x = x),
    fun = sr_demand,
    color = purple,
    size = 1
  ) +
  annotate(
    "label",
    label = expression(D[SR]),
    x = 10,
    y = sr_demand(x = 10),
    color = purple,
    family = "Fira Sans",
    size = 5
  ) +
  # appearance
  labs(x = "Units of labor (E)", y = "Wage (w)") +
  scale_x_continuous(expand = c(0, 0), breaks = seq(0, 100, 20), limits = c(0, 110)) +
  scale_y_continuous(expand = c(0, 0), breaks = seq(0, 50, 10), labels = scales::dollar, limits = c(0, 55)) +
  theme_simple +
  theme(axis.title.x = element_text(margin = margin(t = 10)),
        axis.title.y = element_text(margin = margin(r = 10)))

plot
```
]
.pull-right[

**Q:** Why is the short-run labor demand curve (.hi-purple[D.sub[SR]]) steeper than the short-run labor demand curve (.hi-purple[D.sub[LR]])?


]

---
count: false
# Market labor demand curve

.pull-left[
```{r, dev = "svg", echo = F, fig.height = 5.5, fig.width = 5.5}
plot
```
]
.pull-right[

**Q:** Why is the short-run labor demand curve (.hi-purple[D.sub[SR]]) steeper than the short-run labor demand curve (.hi-purple[D.sub[LR]])?

**A:** Firms have fewer alternatives to labor in the short run .mono[-->] less responsive to changes in the wage.
]

---
# Responsiveness

### **Labor demand elasticity**

> A unit-free measure of the responsiveness of the quantity of labor demanded to changes in the wage. 

$$\epsilon_d = \dfrac{\%\Delta E}{\%\Delta w} = \dfrac{(E_2 - E_1) / E_1}{(w_2 - w_1) / w_1} \leq 0$$


---
class: inverse, middle

# Robot tax, featuring Bill Gates

---
class: clear-slide

<iframe 
  src="https://www.youtube.com/embed/nccryZOcrUg" frameborder="0"  allowfullscreen
  allow="
    accelerometer; 
    autoplay; 
    clipboard-write; 
    encrypted-media; 
    gyroscope; 
    picture-in-picture
  "
  style="
    position: fixed;
    top: 0px;
    bottom: 0px;
    right: 0px;
    width: 100%;
    border: none;
    margin: 0;
    padding: 0;
    overflow: hidden;
    z-index: 999999;
    height: 100%;
  ">
  </iframe>

---
# Robot tax, featuring Bill Gates

## Discussion

**Q:** How would a robot tax affect... 

- The price of capital?
- The employment of capital in the long run?
- The employment of labor in the long run?
    - Low-skill labor?
    - High-skill labor?
- Tax revenue?


--

**Q:** Should we do it?

---
# Housekeeping

**Midterm exam** scheduled for Wednesday, April 28th during class time.

**Midterm review session** during class on Monday, April 26th.

**Problem Set 2** due Monday, April 26th by 4:00pm PDT.
